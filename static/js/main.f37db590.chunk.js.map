{"version":3,"sources":["services/imageAPI.js","Components/Searchbar/Searchbar.styles.js","Components/Searchbar/Searchbar.js","Components/Loader/Loader.styles.js","Components/Loader/Spiner.js","Components/ImageGalleryItem/ImageGalleryItem.styles.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.styles.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.styles.js","Components/Button/Button.js","Components/Modal/Modal.styles.js","Components/Modal/Modal.js","App.styles.js","App.js","index.js"],"names":["getImages","searchQuery","page","axios","get","then","res","data","hits","SearchbarCont","styled","header","SearchForm","form","SearchFormBtn","button","SearchFormBtnLabel","span","SearchFormInput","input","Searchbar","state","handleInputValue","evt","value","currentTarget","setState","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","resetForm","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","LoaderStyled","div","Spiner","color","height","width","ImageGalleryItemStyled","li","ImageGalleryStyled","img","ImageGalleryItem","imageUrl","tags","largeImageURL","openModal","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","id","webformatURL","LoadMoreBtn","Button","Overlay","ModalContainer","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","children","Container","App","showModal","largeImage","status","error","handleFormSubmit","fetchImages","options","prevState","length","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","info","catch","toggleModal","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f37db590.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getImages = ({ searchQuery, page = 1 }) => {\r\n    return axios\r\n        .get(\r\n            `https://pixabay.com/api/?key=21947643-3ad5511e98ce1ab16d6eede2a&q=${searchQuery}&image_type=photo&page=${page}&per_page=12&orientation=horizontal`,\r\n        )\r\n        .then(res => res.data.hits);\r\n};\r\n\r\nexport default getImages;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SearchbarCont = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormBtn = styled.button`\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://img.icons8.com/ios/50/000000/search--v1.png');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const SearchFormBtnLabel = styled.span`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n\r\n    &::placeholder {\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport {\r\n    SearchbarCont,\r\n    SearchForm,\r\n    SearchFormBtn,\r\n    SearchFormBtnLabel,\r\n    SearchFormInput,\r\n} from './Searchbar.styles';\r\n\r\nexport class Searchbar extends React.Component {\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleInputValue = evt => {\r\n        const { value } = evt.currentTarget;\r\n        this.setState({\r\n            searchQuery: value.toLowerCase(),\r\n        });\r\n    };\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        if (this.state.searchQuery.trim() === '') {\r\n            return;\r\n        }\r\n        this.props.onSubmit(this.state.searchQuery);\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            searchQuery: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <SearchbarCont>\r\n                <SearchForm onSubmit={this.handleSubmit}>\r\n                    <SearchFormBtn type=\"submit\">\r\n                        <SearchFormBtnLabel>Search</SearchFormBtnLabel>\r\n                    </SearchFormBtn>\r\n\r\n                    <SearchFormInput\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleInputValue}\r\n                    />\r\n                </SearchForm>\r\n            </SearchbarCont>\r\n        );\r\n    }\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoaderStyled = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { LoaderStyled } from './Loader.styles';\r\n\r\nexport const Spiner = () => {\r\n    return (\r\n        <LoaderStyled>\r\n            <Loader type=\"Bars\" color=\"#00BFFF\" height={200} width={200} />\r\n        </LoaderStyled>\r\n    );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ImageGalleryItemStyled = styled.li`\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14),\r\n        0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const ImageGalleryStyled = styled.img`\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    &:hover {\r\n        transform: scale(1.03);\r\n        cursor: zoom-in;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    ImageGalleryItemStyled,\r\n    ImageGalleryStyled,\r\n} from './ImageGalleryItem.styles';\r\nexport const ImageGalleryItem = ({\r\n    imageUrl,\r\n    tags,\r\n    largeImageURL,\r\n    openModal,\r\n}) => {\r\n    return (\r\n        <ImageGalleryItemStyled>\r\n            <ImageGalleryStyled\r\n                src={imageUrl}\r\n                alt={tags}\r\n                onClick={() => openModal(largeImageURL)}\r\n            />\r\n        </ImageGalleryItemStyled>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    imageUrl: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    openModal: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport { ImageGalleryList } from './ImageGallery.styles';\r\n\r\nexport const ImageGallery = ({ images, openModal }) => {\r\n    return (\r\n        <ImageGalleryList>\r\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    imageUrl={webformatURL}\r\n                    tags={tags}\r\n                    largeImageURL={largeImageURL}\r\n                    openModal={openModal}\r\n                />\r\n            ))}\r\n        </ImageGalleryList>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    openModal: PropTypes.func.isRequired,\r\n};\r\n\r\n// export class ImageGallery extends React.Component {\r\n//     state = {\r\n//         images: [],\r\n//         error: null,\r\n//         status: 'idle',\r\n//     };\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         const prevQuery = prevProps.searchQuery;\r\n//         const nextQuery = this.props.searchQuery;\r\n\r\n//         if (prevQuery !== nextQuery) {\r\n//             console.log('Изменился запрос');\r\n\r\n//             this.setState({ status: 'pending' });\r\n//             setTimeout(() => {\r\n//                 axios\r\n//                     .get(\r\n//                         `https://pixabay.com/api/?key=21947643-3ad5511e98ce1ab16d6eede2a&q=${nextQuery}&image_type=photo&page=1&per_page=12&orientation=horizontal`,\r\n//                     )\r\n//                     .then(res => {\r\n//                         console.log(res.data);\r\n//                         console.log(res.data.hits);\r\n\r\n//                         return this.setState({\r\n//                             images: res.data.hits,\r\n//                             status: 'resolved',\r\n//                         });\r\n//                     })\r\n// .catch(error =>\r\n//     this.setState({ error, status: 'rejected' }),\r\n//                     );\r\n//             }, 1500);\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const { images, error, status } = this.state;\r\n\r\n//         if (status === 'idle') {\r\n//             return <div>Введи запрос</div>;\r\n//         }\r\n\r\n//         if (status === 'pending') {\r\n//             return <div>Загружаем...</div>;\r\n//         }\r\n\r\n//         if (status === 'rejected') {\r\n//             return <p>{error.message}</p>;\r\n//         }\r\n\r\n//         if (status === 'resolved') {\r\n//             return (\r\n//                 <ul className=\"ImageGallery\">\r\n//                     {images.map(({ id, webformatURL, tags }) => (\r\n//                         <ImageGalleryItem\r\n//                             key={id}\r\n//                             imageUrl={webformatURL}\r\n//                             tags={tags}\r\n//                         />\r\n//                     ))}\r\n//                 </ul>\r\n//             );\r\n//         }\r\n//     }\r\n// }\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoadMoreBtn = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 180px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LoadMoreBtn } from './Button.styles';\r\n\r\nexport const Button = ({ onClick }) => {\r\n    return (\r\n        <LoadMoreBtn type=\"button\" onClick={onClick}>\r\n            Load more\r\n        </LoadMoreBtn>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Overlay, ModalContainer } from './Modal.styles';\r\n\r\nexport class Modal extends React.Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = evt => {\r\n        if (evt.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = evt => {\r\n        if (evt.currentTarget === evt.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Overlay onClick={this.handleBackdropClick}>\r\n                <ModalContainer>{this.props.children}</ModalContainer>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 16px;\r\n    padding-bottom: 24px;\r\n`;\r\n","import React from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport getImages from './services/imageAPI';\r\n\r\nimport { Searchbar } from './Components/Searchbar/Searchbar';\r\nimport { Spiner } from './Components/Loader/Spiner';\r\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery';\r\nimport { Button } from './Components/Button/Button';\r\nimport { Modal } from './Components/Modal/Modal';\r\n\r\nimport { Container } from './App.styles';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        page: 1,\r\n        images: [],\r\n        searchQuery: '',\r\n        showModal: false,\r\n        largeImage: '',\r\n        status: 'idle',\r\n        error: null,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.fetchImages();\r\n        }\r\n\r\n        if (prevState.page !== this.state.page) {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = searchQuery => {\r\n        this.setState({\r\n            searchQuery: searchQuery.trim(),\r\n            page: 1,\r\n            images: [],\r\n            status: 'idle',\r\n            error: null,\r\n        });\r\n    };\r\n\r\n    fetchImages = () => {\r\n        const { page, searchQuery } = this.state;\r\n        const options = { searchQuery, page };\r\n\r\n        this.setState({ status: 'pending' });\r\n\r\n        getImages(options)\r\n            .then(hits => {\r\n                this.setState(prevState => ({\r\n                    page: prevState.page + 1,\r\n                    images: [...prevState.images, ...hits],\r\n                    status: 'resolved',\r\n                }));\r\n\r\n                if (hits.length > 0) {\r\n                    toast.success('We have a picture for you!', {\r\n                        position: 'bottom-right',\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n\r\n                if (hits.length === 0) {\r\n                    toast.info('Picture is not found', {\r\n                        position: 'bottom-right',\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error, status: 'rejected' });\r\n\r\n                toast.error('Error!', {\r\n                    position: 'bottom-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            });\r\n    };\r\n\r\n    openModal = largeImageURL => {\r\n        this.setState({\r\n            showModal: true,\r\n            largeImage: largeImageURL,\r\n        });\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            largeImage: '',\r\n            showModal: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { images, showModal, largeImage, status } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Searchbar onSubmit={this.handleFormSubmit} />\r\n                <>\r\n                    {status === 'pending' && <Spiner />}\r\n                    {status === 'resolved' && (\r\n                        <>\r\n                            <ImageGallery\r\n                                images={images}\r\n                                openModal={this.openModal}\r\n                            />\r\n\r\n                            {images.length > 0 && (\r\n                                <Button onClick={this.fetchImages} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </>\r\n\r\n                {showModal && (\r\n                    <Modal onClose={this.toggleModal}>\r\n                        <img src={largeImage} alt=\"\" />\r\n                    </Modal>\r\n                )}\r\n                <ToastContainer />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}